@using EnjOffer.Core.DTO;
@model IEnumerable<UserStatisticsResponse>;
@{
    ViewBag.Title = "Personal cabinet";
}
@addTagHelper "*, Microsoft.AspNetCore.Mvc.TagHelpers"

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/css/admin-panel.css">
    <title>@ViewBag.Title</title>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
 @{
    string js = @"function formInteraction() {
        const button = document.querySelector('.form-button');
        if (button.innerHTML === 'Open form') {
            button.innerHTML = 'Close form';
        } else {
            button.innerHTML = 'Open form';
        }
    }

    function canDelete() {
        const checkAccount = document.getElementById('check-for-delete-account');
        const checkWord = document.getElementById('check-for-delete-word');
        const removeAccount = document.getElementById('remove-account-button');
        const removeWord = document.getElementById('remove-word-button');

        removeAccount && checkAccount.checked
            ? (removeAccount.disabled = false)
            : (removeAccount.disabled = true)

        removeWord && checkWord.checked
            ? (removeWord.disabled = false)
            : (removeWord.disabled = true)
    }";
}
<script>
    @Html.Raw(js);
</script>
</head>
<body>
    <main class="admin-panel">
        <div class="sidebar-container">
            <aside class="sidebar">
                <a href="/" class="sidebar__item" id="sidebar__personal-account">
                    <h2 class="sidebar__item-content">Personal account</h2>
                </a>
                <a href="word-trainer" class="sidebar__item" id="sidebar__word-trainer">
                    <h2 class="sidebar__item-content">Word trainer</h2>
                </a>
                <a href="library" class="sidebar__item" id="sidebar__library">
                    <h2 class="sidebar__item-content">Library</h2>
                </a>
            </aside>
        </div>
    <div class="admin-panel__main">
        <h2 class="admin-panel__sections">
            Welcome, @User.Identity?.Name!
        </h2>
        <div class="manager">
                @if(User.IsInRole("SuperAdmin"))
                {
                    <form id="create-admin-account" method="POST" action="register">
                <h3>Add admin account</h3>
                <details>
                    <summary class="form-button" onclick="@Html.Raw("formInteraction()")">Open form</summary>
                    <div class="input-field">
                        <div class="input-field__item">
                            <p>Email</p>
                            <input type="email" class="input-field__input" name="Email" required/>
                        </div>
                        <div class="input-field__item">
                            <p>Password</p>
                            <input type="password" class="input-field__input" name="Password" minlength="6" required/>
                        </div>
                        <div class="input-field__item">
                            <p>Confirm password</p>
                            <input type="password" class="input-field__input" name="RepeatedPassword" minlength="6" required/>
                        </div>
                        <div class="input-field__item">
                        </div>
                        <label>Admin</label>
                        <input type="radio" name="UserType" value="Admin" />
                        @if (ViewBag.ErrorsRegister is not null)
                            {
                                foreach(var item in ViewBag.ErrorsRegister)
                                {
                                    <span style="color: red; font-style: italic;">@item</span>
                                }
                            }
                        <button class="input-field__button">Create account</button>
                    </div>
                </details>
            </form>
            <form id="remove-admin-account" method="POST" action="personal-cabinet/delete-admin">
                <h3>Remove admin account</h3>
                <details>
                    <summary class="form-button" onclick="@Html.Raw("formInteraction()")">Open form</summary>
                    <div class="input-field">
                        <div class="input-field__item">
                            <p>Email</p>
                            <input type="email" class="input-field__input" name="Email" required/>
                        </div>
                        @if (ViewBag.ErrorsDeleteAdmin is not null)
                            {
                                foreach(var item in ViewBag.ErrorsDeleteAdmin)
                                {
                                    <span style="color: red; font-style: italic;">@item</span>
                                }
                            }
                        <div class="remove-section">
                            <div class="remove-section__check">
                                <p class="warning-text">I am sure</p>
                                <input type="checkbox" id="check-for-delete-account" onclick="@Html.Raw("canDelete()")">
                            </div>
                            <button type="submit" id="remove-account-button" class="input-field__button" disabled>Remove
                                account</button>
                        </div>
                    </div>
                </details>
            </form>
                }
                @if (User.IsInRole("Admin") || User.IsInRole("SuperAdmin"))
                {
                    <form id="database-add-word" method="POST" action="/personal-cabinet/add-default-word">
                <h3>Add word to database</h3>
                <details>
                    <summary class="form-button" onclick="formInteraction()">Open form</summary>
                    <div class="input-field">
                        <div class="input-field__item">
                            <p>Word</p>
                            <input type="text" class="input-field__input" name="Word" required />
                        </div>
                        <div class="input-field__item">
                            <p>Translation</p>
                            <input type="text" class="input-field__input" name="WordTranslation" required />
                        </div>
                        <div class="input-field__item">
                            <p>Link to image</p>
                            <input type="text" class="input-field__input" name="ImageSrc" />
                        </div>
                         @if (ViewBag.ErrorsAddDefaultWord is not null)
                            {
                                foreach(var item in ViewBag.ErrorsAddDefaultWord)
                                {
                                    <span style="color: red; font-style: italic;">@item</span>
                                }
                            }
                        <button type="submit" class="input-field__button">Add new word</button>
                    </div>
                </details>
            </form>
            <form id="database-remove-word" method="POST" action="/personal-cabinet/delete-default-word">
                <h3>Remove word from database</h3>
                <details>
                    <summary class="form-button" onclick="formInteraction()">Open form</summary>
                    <div class="input-field">
                        <div class="input-field__item">
                            <p>Word</p>
                            <input type="text" class="input-field__input" name="Word" required/>
                        </div>
                        <div class="input-field__item">
                            <p>Word Translation</p>
                            <input type="text" class="input-field__input" name="WordTranslation" required/>
                        </div>
                        @if (ViewBag.ErrorsDeleteDefaultWord is not null)
                            {
                                foreach(var item in ViewBag.ErrorsDeleteDefaultWord)
                                {
                                    <span style="color: red; font-style: italic;">@item</span>
                                }
                            }
                        <div class="remove-section">
                            <div class="remove-section__check">
                                <p class="warning-text">I am sure</p>
                                <input type="checkbox" id="check-for-delete-word" onclick="@Html.Raw("canDelete()")">
                            </div>
                            <button type="submit" id="remove-word-button" class="input-field__button" disabled>Remove
                                word</button>
                        </div>
                    </div>
                </details>
            </form>
                }
        </div>
        <h2 class="admin-panel__sections" style="margin-bottom: 0;">Statistics</h2>
        <div>
            <canvas id="myChart" class="myChart"></canvas>
        </div>
        <div class="advices">
            @foreach(AdviceResponse item in ViewBag.Advice)
                {
                    <div class="advice">
                        <h4>Advice #@item.AdviceNumber</h4>
                        <p>@item.AdviceContent</p>
                    </div>
                }
        </div>
        <a href="logout" class="input-field__button" style="text-decoration: none; color: #000; padding: 10px 20px;">Log out</a>
    </div>
</main>
@{
    string?[] dates = Model.Select(temp => temp.AnswerDate!.Value.Date.ToShortDateString()).ToArray();
    int[] correctWordsPerDay = Model.Select(temp => temp.CorrectAnswersCount).ToArray();
    int[] incorrectWordsPerDay = Model.Select(temp => temp.IncorrectAnswersCount).ToArray();

    string jsDates = string.Join(",", dates.Select(d => "'" + DateTime.Parse(d).ToString("MM/dd/yyyy") + "'"));
    string jsCorrectWordsPerDay = string.Join(",", correctWordsPerDay);
    string jsIncorrectWordsPerDay = string.Join(",", incorrectWordsPerDay);

    string diagramJs = $@"var data = {{
            labels: [{jsDates}],
            datasets: [
                {{
                    label: 'Правильно введені слова',
                    backgroundColor: 'green',
                    data: [{jsCorrectWordsPerDay}]
                }},
                {{
                    label: 'Неправильно введені слова',
                    backgroundColor: 'red',
                    data: [{jsIncorrectWordsPerDay}]
                }}
            ]
        }};

        var options = {{
            scales: {{
                yAxes: [{{
                    ticks: {{
                        beginAtZero: true
                    }}
                }}],
            }}
        }};

        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {{
            type: 'bar',
            data: data,
            options: options
        }});";
}
<script>
    @Html.Raw(diagramJs);
</script>
</body>

</html>

